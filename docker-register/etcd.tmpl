#!/usr/bin/python

import etcd
import sys
from urlparse import urlparse

etcd_host = "{{ .Env.ETCD_HOST }}"
if not etcd_host:
    print "ETCD_HOST not set"
    sys.exit(1)

port = 4001
host = etcd_host

if ":" in etcd_host:
    host, port = etcd_host.split(":")

client = etcd.Client(host=host, port=int(port))

def ensuredir(dirname):
  #create a directory in etcd if not exist
    try:
        backends = client.read(dirname)
    except (etcd.EtcdKeyNotFound, KeyError):
        client.write(dirname, None, dir=True)

base_dir = "/backends"
ensuredir(base_dir)

{{ $local := . }}
{{range $key, $value := .}}
{{ $addrLen := len $value.Addresses }}
{{ if eq $addrLen 1 }}
{{ with $address := index $value.Addresses 0 }}

{{ if $address.HostPort}}

if "/" in "{{ $value.Image.Repository }}":
	image_name = "{{ $value.Image.Repository }}".split('/')[1]
else:
	image_name = "{{ $value.Image.Repository }}"
image_tag = "{{ $value.Image.Tag }}"

image_dir = "%s/%s" % (base_dir, image_name)
tag_dir = "%s/%s" % (image_dir, image_tag)

ensuredir(image_dir)
ensuredir(tag_dir)

#container_id = "{{printf "%.*s" 12 $value.ID}}"
container_id = "{{ $value.ID }}"
key_path = "%s/%s" % (tag_dir, container_id)

print("registering %s" % key_path)
client.write(key_path, "{{ $address.HostIP }}:{{ $address.HostPort }}", ttl=15)
#client.write("/backends/{{ $value.Image.Repository}}/port", "{{ $address.Port }}", ttl=15)

{{ end }}
{{ end }}
{{end}}
{{end}}
